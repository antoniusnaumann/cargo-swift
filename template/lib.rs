#[swift_bridge::bridge]
mod ffi {
    extern "Rust" {
        // Declare all functions and types that should be exported here
        // Signatures must match an existing type or function in this file

        // You can rename functions...
        #[swift_bridge(swift_name = "helloRust")]
        fn hello_rust() -> String;
    }

    extern "Rust" {
        // ...export type initializers...
        type About;

        #[swift_bridge(init)]
        fn with_owner(name: String) -> About;
        fn info(&self) -> String;

        // ...and much, much more!
        // For full guide read the [Swift Bridge Book](https://chinedufn.github.io/swift-bridge/bridge-module/index.html)
    }
}

fn hello_rust() -> String {
    String::from("Hello from your Swift Package - written in Rust!")
}

pub struct About {
    name: String,
}

impl About {
    fn with_owner(name: String) -> Self {
        Self { name }
    }

    fn info(&self) -> String {
        format!(
            "Generated by {} using cargo swift init v<CARGO_SWIFT_VERSION>",
            self.name
        )
    }
}
